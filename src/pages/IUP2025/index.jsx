import React, { useState, useEffect, useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import { 
  Layout, 
  Typography, 
  Card, 
  Button, 
  Spin, 
  Alert, 
  Row, 
  Col,
  Space,
  Badge,
  Divider,
  Input,
  Select,
  Tag,
  Statistic,
  Progress,
  Table,
  message
} from 'antd';
import { 
  ArrowLeftOutlined, 
  BookOutlined, 
  CheckCircleOutlined,
  ClockCircleOutlined,
  ExclamationCircleOutlined,
  EditOutlined,
  EyeOutlined,
  SearchOutlined,
  FilterOutlined,
  TeamOutlined,
  TrophyOutlined
} from '@ant-design/icons';
import { useAuth } from '../../contexts/AuthContext';
import { useEducationPrograms } from '../../hooks/useEducationPrograms';

import api from '../../services/api';
import StudentStageView from './components/StudentStageView';
import SupervisorView from './components/SupervisorView';
import AdminView from './components/AdminView';
import './IUP2025.css';

const { Header, Content } = Layout;
const { Title, Text } = Typography;
const { Search } = Input;
const { Option } = Select;

const IUP2025 = () => {
  const navigate = useNavigate();
  const { user } = useAuth();
  const [loading, setLoading] = useState(true);
  const [iupData, setIupData] = useState(null);
  const [superviseesData, setSuperviseesData] = useState([]);
  const [selectedStudent, setSelectedStudent] = useState(null);
  const [error, setError] = useState(null);
  const [filters, setFilters] = useState({
    search: '',
    educationProgram: '',
    language: '',
    status: ''
  });

  const { getDisplayName: getDisplayRus, getShortName: getShortRus } = useEducationPrograms('magistrants', '–†—É—Å—Å–∫–∏–π');
  const { getDisplayName: getDisplayKaz, getShortName: getShortKaz } = useEducationPrograms('magistrants', '“ö–∞–∑–∞“õ—à–∞');


  const getDisplayWithLanguage = (language, OP) => {
    switch(language) {
      case '–†—É—Å—Å–∫–∏–π':
        return getDisplayRus(OP,'t2');
      case '“ö–∞–∑–∞“õ—à–∞':
        return getDisplayKaz(OP,'t2');
      default:
        return getDisplayRus(OP,'t2');
    }
  }


  const loadIUPData = useCallback(async () => {
    try {
      setLoading(true);
      setError(null);
      
      if (user.role === 'magistrants') {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ò–£–ü –¥–ª—è –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç–∞
        const response = await api.get('/iup');
        console.log('IUP API Response:', response.data);
        
        if (response.data && response.data.success && response.data.data) {
          // –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ API
          setIupData(response.data.data.iup);
        } else if (response.data && response.data.iup) {
          // –°—Ç–∞—Ä–∞—è/–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ API
          setIupData(response.data.iup);
        } else {
          throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ API');
        }
      } else if (user.role === 'leaders') {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥–æ–ø–µ—á–Ω—ã—Ö –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è
        console.log('üîç Making request for supervisees. User:', {
          role: user.role,
          fullName: user.fullName,
          _id: user._id
        });
        
        const response = await api.get('/iup/supervisees');
        console.log('Supervisees API Response:', response.data);
        
        if (response.data && response.data.success && response.data.data) {
          // –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ API
          console.log('‚úÖ Using new API structure, supervisees count:', response.data.data.supervisees?.length);
          setSuperviseesData(response.data.data.supervisees);
        } else if (response.data && response.data.supervisees) {
          // –°—Ç–∞—Ä–∞—è/–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ API
          console.log('‚úÖ Using old API structure, supervisees count:', response.data.supervisees?.length);
          setSuperviseesData(response.data.supervisees);
        } else {
          console.error('‚ùå Invalid API response structure:', response.data);
          throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ API');
        }
      } else if (user.role === 'admins') {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ò–£–ü –¥–ª—è –∞–¥–º–∏–Ω–∞
        const response = await api.get('/iup');
        console.log('Admin IUP API Response:', response.data);
        
        if (response.data && response.data.success && response.data.data && response.data.data.iups) {
          // –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ API
          setSuperviseesData(response.data.data.iups.map(iup => ({
            ...iup.student,
            iup: iup,
            hasIup: true,
            progress: iup.progress,
            currentStageTitle: iup.currentStageData?.title || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω',
            stagesRequiringAttention: iup.stages?.filter(s => 
              s.status === 'submitted' || s.status === 'supervisor_approved' || s.status === 'admin_review'
            ).length || 0
          })));
        } else if (response.data && response.data.iups) {
          // –°—Ç–∞—Ä–∞—è/–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ API
          setSuperviseesData(response.data.iups.map(iup => ({
            ...iup.student,
            iup: iup,
            hasIup: true,
            progress: iup.progress,
            currentStageTitle: iup.currentStageData?.title || '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω',
            stagesRequiringAttention: iup.stages?.filter(s => 
              s.status === 'submitted' || s.status === 'supervisor_approved' || s.status === 'admin_review'
            ).length || 0
          })));
        } else {
          throw new Error('–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ API –¥–ª—è –∞–¥–º–∏–Ω–∞');
        }
      }
    } catch (error) {
      console.error('Error loading IUP data:', error);
      console.error('Error details:', {
        message: error.message,
        response: error.response,
        status: error.response?.status,
        data: error.response?.data
      });
      
      const errorMessage = error.response?.data?.message || error.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ò–£–ü';
      setError(errorMessage);
      message.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ò–£–ü: ${errorMessage}`);
    } finally {
      setLoading(false);
    }
  }, [user]);

  useEffect(() => {
    if (user && user.role) {
      loadIUPData();
    }
  }, [user, loadIUPData]);

  const handleStudentSelect = async (studentId) => {
    try {
      setLoading(true);
      let studentIup = null;

      if (user.role === 'leaders') {
        // –î–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –ø–æ–ª—É—á–∞–µ–º –ò–£–ü –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
        const response = await api.get(`/iup?studentId=${studentId}`);
        console.log('Leader student IUP response:', response.data);
        
        if (response.data && response.data.success && response.data.data && response.data.data.iups) {
          // –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ API
          studentIup = response.data.data.iups[0];
        } else if (response.data && response.data.iups) {
          // –°—Ç–∞—Ä–∞—è/–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ API
          studentIup = response.data.iups[0];
        }
      } else if (user.role === 'admins') {
        // –î–ª—è –∞–¥–º–∏–Ω–∞ —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∞–µ–º –ò–£–ü –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
        const response = await api.get(`/iup?studentId=${studentId}`);
        console.log('Admin student IUP response:', response.data);
        
        if (response.data && response.data.success && response.data.data && response.data.data.iups) {
          // –ù–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ API
          studentIup = response.data.data.iups[0];
        } else if (response.data && response.data.iups) {
          // –°—Ç–∞—Ä–∞—è/–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ API
          studentIup = response.data.iups[0];
        }
      }

      if (studentIup) {
        setIupData(studentIup);
        setSelectedStudent(studentId);
      } else {
        message.error('–ò–£–ü –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    } catch (error) {
      console.error('Error loading student IUP:', error);
      message.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ò–£–ü —Å—Ç—É–¥–µ–Ω—Ç–∞');
    } finally {
      setLoading(false);
    }
  };

  const handleBackToList = () => {
    setSelectedStudent(null);
    setIupData(null);
    loadIUPData();
  };

  const getStatusColor = (status) => {
    const statusColors = {
      'not_started': 'default',
      'in_progress': 'processing',
      'submitted': 'warning',
      'supervisor_review': 'warning',
      'supervisor_approved': 'success',
      'admin_review': 'warning',
      'admin_approved': 'success',
      'completed': 'success',
      'rejected': 'error'
    };
    return statusColors[status] || 'default';
  };

  const getStatusIcon = (status) => {
    const icons = {
      'not_started': null,
      'in_progress': <ClockCircleOutlined />,
      'submitted': <ExclamationCircleOutlined />,
      'supervisor_review': <ExclamationCircleOutlined />,
      'supervisor_approved': <CheckCircleOutlined />,
      'admin_review': <ExclamationCircleOutlined />,
      'admin_approved': <CheckCircleOutlined />,
      'completed': <CheckCircleOutlined />,
      'rejected': <ExclamationCircleOutlined />
    };
    return icons[status] || null;
  };

  const getStatusText = (status) => {
    const statusTexts = {
      'not_started': '–ù–µ –Ω–∞—á–∞—Ç–æ',
      'in_progress': '–í –ø—Ä–æ—Ü–µ—Å—Å–µ',
      'submitted': '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É',
      'supervisor_review': '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ —É —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è',
      'supervisor_approved': '–û–¥–æ–±—Ä–µ–Ω–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º',
      'admin_review': '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ —É –∞–¥–º–∏–Ω–∞',
      'admin_approved': '–û–¥–æ–±—Ä–µ–Ω–æ –∞–¥–º–∏–Ω–æ–º',
      'completed': '–ó–∞–≤–µ—Ä—à–µ–Ω–æ',
      'rejected': '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ'
    };
    return statusTexts[status] || status;
  };

  const filteredSupervisees = superviseesData.filter(supervisee => {
    const matchesSearch = supervisee.fullName?.toLowerCase().includes(filters.search.toLowerCase()) ||
                         supervisee.email?.toLowerCase().includes(filters.search.toLowerCase());
    const matchesOP = !filters.educationProgram || supervisee.OP === filters.educationProgram;
    const matchesLanguage = !filters.language || supervisee.language === filters.language;
    const matchesStatus = !filters.status || supervisee.iup?.overallStatus === filters.status;
    
    return matchesSearch && matchesOP && matchesLanguage && matchesStatus;
  });

  if (loading) {
    return (
      <Layout style={{ minHeight: '100vh', background: '#f0f2f5' }}>
        <Content style={{ padding: '50px', textAlign: 'center' }}>
          <Spin size="large" tip="–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ò–£–ü..." />
        </Content>
      </Layout>
    );
  }

  // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –ò–£–ü
  if (selectedStudent && iupData) {
    return (
      <Layout style={{ minHeight: '100vh', background: '#f0f2f5' }}>
        <Header style={{ 
          background: '#fff', 
          padding: '0 20px', 
          boxShadow: '0 2px 8px rgba(0,0,0,0.06)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'space-between'
        }}>
          <Space>
            <Button 
              type="text" 
              icon={<ArrowLeftOutlined />} 
              onClick={handleBackToList}
              size="large"
            >
              –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
            </Button>
            <Title level={3} style={{ margin: 0, color: '#1890ff' }}>
              –ò–£–ü 2025 - {iupData.student?.fullName}
            </Title>
          </Space>
          <Badge count={iupData.currentStage} showZero color="#1890ff" />
        </Header>
        
        <Content style={{ padding: '20px' }}>
          {user.role === 'leaders' ? (
            <SupervisorView 
              iupData={iupData} 
              onUpdate={loadIUPData}
              onBack={handleBackToList}
            />
          ) : (
            <AdminView 
              iupData={iupData} 
              onUpdate={loadIUPData}
              onBack={handleBackToList}
            />
          )}
        </Content>
      </Layout>
    );
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º –ü–ö (–¥–ª—è –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç–æ–≤ –Ω–∞ 2 —ç—Ç–∞–ø–µ)
  const isPCMode = user.role === 'magistrants' && 
                   iupData && 
                   iupData.currentStage === 2 && 
                   iupData.stages?.find(s => s.stageNumber === 2)?.stageType === 'dissertation_application';

  return (
    <Layout style={{ minHeight: '100vh', background: isPCMode ? '#f0f2f5' : '#f0f2f5' }} className={isPCMode ? 'iup-pc-mode' : ''}>
      <Header style={{ 
        background: isPCMode ? 'linear-gradient(135deg, #1890ff 0%, #40a9ff 100%)' : '#fff', 
        padding: '0 20px', 
        boxShadow: isPCMode ? '0 4px 16px rgba(0,0,0,0.15)' : '0 2px 8px rgba(0,0,0,0.06)',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'space-between'
      }}>
        <Space>
          <Button 
            type={isPCMode ? 'primary' : 'text'}
            icon={<ArrowLeftOutlined />} 
            onClick={() => navigate('/profile')}
            size="large"
            style={isPCMode ? { 
              background: 'rgba(255,255,255,0.2)', 
              border: '1px solid rgba(255,255,255,0.3)',
              color: 'white'
            } : {}}
          >
            –ù–∞–∑–∞–¥ –≤ –ø—Ä–æ—Ñ–∏–ª—å
          </Button>
          <Title level={3} style={{ margin: 0, color: isPCMode ? 'white' : '#1890ff' }}>
            –ò–£–ü 2025
          </Title>
        </Space>
        {user.role === 'magistrants' && iupData && (
          <Badge 
            count={iupData.currentStage} 
            showZero 
            color={isPCMode ? '#52c41a' : '#1890ff'}
            style={isPCMode ? { 
              background: 'rgba(255,255,255,0.2)', 
              color: 'white',
              border: '1px solid rgba(255,255,255,0.3)'
            } : {}}
          />
        )}
      </Header>
      
      <Content style={{ padding: isPCMode ? '0' : '20px', background: isPCMode ? '#f0f2f5' : 'transparent' }}>
        {user.role === 'magistrants' ? (
          // –í–∏–¥ –¥–ª—è –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç–∞
          error ? (
            <Card>
              <Alert
                message="–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ò–£–ü"
                description={
                  <div>
                    <p>{error}</p>
                    <Button 
                      type="primary" 
                      onClick={loadIUPData}
                      style={{ marginTop: 12 }}
                    >
                      –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                    </Button>
                  </div>
                }
                type="error"
                showIcon
              />
            </Card>
          ) : iupData ? (
            <StudentStageView iupData={iupData} onUpdate={loadIUPData} />
          ) : loading ? (
            <Card>
              <Alert
                message="–ó–∞–≥—Ä—É–∑–∫–∞ –ò–£–ü"
                description="–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ò–£–ü..."
                type="info"
                showIcon
              />
            </Card>
          ) : (
            <Card>
              <Alert
                message="–ò–£–ü –Ω–µ –Ω–∞–π–¥–µ–Ω"
                description={
                  <div>
                    <p>–í–∞—à –ò–£–ü –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω.</p>
                    <p>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</p>
                    <ul>
                      <li>–£ –≤–∞—Å –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞—É—á–Ω—ã–π —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å</li>
                      <li>–ò–£–ü –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è</li>
                    </ul>
                    <p><strong>–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º—ã.</strong></p>
                  </div>
                }
                type="warning"
                showIcon
              />
            </Card>
          )
        ) : (user.role === 'leaders' || user.role === 'admins') ? (
          // –°–ø–∏—Å–æ–∫ –ø–æ–¥–æ–ø–µ—á–Ω—ã—Ö –¥–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –∏–ª–∏ –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞
          <div>
            {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
            <Row gutter={16} style={{ marginBottom: 24 }}>
              <Col xs={24} sm={8} md={6}>
                <Card className="iup-stats-card">
                  <Statistic
                    title={user.role === 'leaders' ? '–ú–æ–∏ –ø–æ–¥–æ–ø–µ—á–Ω—ã–µ' : '–í—Å–µ–≥–æ –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç–æ–≤'}
                    value={filteredSupervisees.length}
                    prefix={<TeamOutlined />}
                    valueStyle={{ color: '#1890ff' }}
                  />
                </Card>
              </Col>
              <Col xs={24} sm={8} md={6}>
                <Card className="iup-stats-card">
                  <Statistic
                    title="–¢—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è"
                    value={filteredSupervisees.filter(s => (s.stagesRequiringAttention || 0) > 0).length}
                    prefix={<ExclamationCircleOutlined />}
                    valueStyle={{ color: '#ff4d4f' }}
                  />
                </Card>
              </Col>
              <Col xs={24} sm={8} md={6}>
                <Card className="iup-stats-card">
                  <Statistic
                    title="–ó–∞–≤–µ—Ä—à–∏–ª–∏ –ò–£–ü"
                    value={filteredSupervisees.filter(s => (s.progress || 0) === 100).length}
                    prefix={<TrophyOutlined />}
                    valueStyle={{ color: '#52c41a' }}
                  />
                </Card>
              </Col>
              <Col xs={24} sm={8} md={6}>
                <Card className="iup-stats-card">
                  <Statistic
                    title="–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å "
                    
                    value={Math.round(filteredSupervisees.reduce((acc, s) => acc + (s.progress || 0), 0) / (filteredSupervisees.length || 1))}
                    suffix="%"
                    prefix={<ClockCircleOutlined />}
                    valueStyle={{ color: 'orange' }}
                  />
                </Card>
              </Col>
            </Row>

            {/* –§–∏–ª—å—Ç—Ä—ã */}
            <Card style={{ marginBottom: 24 }}>
              <Space wrap style={{ marginBottom: 16 }}>
                <SearchOutlined style={{ color: '#1890ff', fontSize: 16 }} />
                <Text strong>–§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫</Text>
              </Space>
              <Row gutter={[16, 16]}>
                <Col xs={24} sm={12} md={8}>
                  <Input
                    placeholder="–ü–æ–∏—Å–∫ –ø–æ –∏–º–µ–Ω–∏ –∏–ª–∏ email"
                    prefix={<SearchOutlined />}
                    value={filters.search}
                    onChange={(e) => setFilters(prev => ({ ...prev, search: e.target.value }))}
                    allowClear
                  />
                </Col>
                {user.role === 'admins' && (
                  <>
                    <Col xs={24} sm={6} md={5}>
                      <Select
                        placeholder="–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞"
                        style={{ width: '100%' }}
                        value={filters.educationProgram}
                        onChange={(value) => setFilters(prev => ({ ...prev, educationProgram: value }))}
                        allowClear
                      >
                        <Option value="7M01503">7M01503</Option>
                        <Option value="7M06101">7M06101</Option>
                        <Option value="7M06104">7M06104</Option>
                        <Option value="8D01103">8D01103</Option>
                      </Select>
                    </Col>
                    <Col xs={24} sm={6} md={5}>
                      <Select
                        placeholder="–Ø–∑—ã–∫ –æ–±—É—á–µ–Ω–∏—è"
                        style={{ width: '100%' }}
                        value={filters.language}
                        onChange={(value) => setFilters(prev => ({ ...prev, language: value }))}
                        allowClear
                      >
                        <Option value="“ö–∞–∑–∞“õ—à–∞">“ö–∞–∑–∞“õ—à–∞</Option>
                        <Option value="–†—É—Å—Å–∫–∏–π">–†—É—Å—Å–∫–∏–π</Option>
                      </Select>
                    </Col>
                    <Col xs={24} sm={6} md={6}>
                      <Select
                        placeholder="–°—Ç–∞—Ç—É—Å –ò–£–ü"
                        style={{ width: '100%' }}
                        value={filters.status}
                        onChange={(value) => setFilters(prev => ({ ...prev, status: value }))}
                        allowClear
                      >
                        <Option value="draft">–ß–µ—Ä–Ω–æ–≤–∏–∫</Option>
                        <Option value="in_progress">–í –ø—Ä–æ—Ü–µ—Å—Å–µ</Option>
                        <Option value="supervisor_review">–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ —É —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è</Option>
                        <Option value="admin_review">–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ —É –∞–¥–º–∏–Ω–∞</Option>
                        <Option value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω</Option>
                      </Select>
                    </Col>
                  </>
                )}
              </Row>
            </Card>

            {/* –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ —Ç–∞–±–ª–∏—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ */}
            <Card title={
              <Space>
                <BookOutlined />
                {user.role === 'leaders' ? '–ú–æ–∏ –ø–æ–¥–æ–ø–µ—á–Ω—ã–µ –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç—ã' : '–í—Å–µ –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç—ã'}
                <Badge count={filteredSupervisees.length} showZero style={{ backgroundColor: '#52c41a' }} />
              </Space>
            }>
              <Table
                dataSource={filteredSupervisees.filter(item => item && item._id)}
                rowKey={record => record._id || record.email || Math.random().toString()}
                pagination={{
                  pageSize: 10,
                  showSizeChanger: true,
                  showQuickJumper: true,
                  showTotal: (total, range) => `${range[0]}-${range[1]} –∏–∑ ${total} –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç–æ–≤`
                }}
                columns={[
                  {
                    title: '–§–ò–û –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç–∞',
                    dataIndex: 'fullName',
                    key: 'fullName',
                    width: 200,
                    fixed: 'left',
                    sorter: (a, b) => {
                      const nameA = a.fullName || '';
                      const nameB = b.fullName || '';
                      return nameA.localeCompare(nameB, 'ru');
                    },
                    defaultSortOrder: 'ascend',
                    render: (text, record) => (
                      <div>
                        <Text strong style={{ fontSize: 14 }}>{text || '–ò–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</Text>
                        <br />
                        <Text type="secondary" style={{ fontSize: 12 }}>
                          ID: {record._id ? record._id.slice(-6) : '–ù–µ—Ç ID'}
                        </Text>
                      </div>
                    )
                  },
                  {
                    title: 'WhatsApp / Email',
                    dataIndex: 'email',
                    key: 'contact',
                    width: 180,
                    render: (email, record) => (
                      <div>
                        {record.whatsapp ? (
                          <div>
                            <Text style={{ fontSize: 13 }}>üì± {record.whatsapp}</Text>
                            <br />
                            <Text type="secondary" style={{ fontSize: 11 }}>‚úâÔ∏è {email || 'Email –Ω–µ —É–∫–∞–∑–∞–Ω'}</Text>
                          </div>
                        ) : (
                          <Text type="secondary" style={{ fontSize: 13 }}>‚úâÔ∏è {email || 'Email –Ω–µ —É–∫–∞–∑–∞–Ω'}</Text>
                        )}
                      </div>
                    )
                  },
                  {
                    title: '–û–ü',
                    dataIndex: 'OP',
                    key: 'OP',
                    width: 120,
                    filters: [
                      { text: '7M01503', value: '7M01503' },
                      { text: '7M06101', value: '7M06101' },
                      { text: '7M06104', value: '7M06104' },
                      { text: '8D01103', value: '8D01103' }
                    ],
                    onFilter: (value, record) => record.OP === value,
                    render: (op) => <Tag color="blue" style={{ fontSize: 12 }}>{op || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</Tag>
                  },
                  {
                    title: '–Ø–∑—ã–∫ –æ–±—É—á–µ–Ω–∏—è',
                    dataIndex: 'language',
                    key: 'language',
                    width: 120,
                    filters: [
                      { text: '“ö–∞–∑–∞“õ—à–∞', value: '“ö–∞–∑–∞“õ—à–∞' },
                      { text: '–†—É—Å—Å–∫–∏–π', value: '–†—É—Å—Å–∫–∏–π' }
                    ],
                    onFilter: (value, record) => record.language === value,
                    render: (language) => <Tag color="green" style={{ fontSize: 12 }}>{language || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</Tag>
                  },
                  {
                    title: '–¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø',
                    key: 'currentStage',
                    width: 180,
                    render: (_, record) => (
                      record.hasIup ? (
                        <div>
                          <Text style={{ fontSize: 13 }}>{record.currentStageTitle || '–≠—Ç–∞–ø –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}</Text>
                          {(record.stagesRequiringAttention || 0) > 0 && (
                            <div style={{ marginTop: 4 }}>
                              <Badge 
                                count={record.stagesRequiringAttention}
                                text="—Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è"
                                style={{ backgroundColor: '#faad14', fontSize: 11 }}
                              />
                            </div>
                          )}
                        </div>
                      ) : (
                        <Text type="secondary" style={{ fontSize: 12 }}>–ò–£–ü –Ω–µ —Å–æ–∑–¥–∞–Ω</Text>
                      )
                    )
                  },
                  {
                    title: '–°—Ç–∞—Ç—É—Å —ç—Ç–∞–ø–∞',
                    key: 'stageStatus',
                    width: 150,
                    filters: [
                      { text: '–ù–µ –Ω–∞—á–∞—Ç–æ', value: 'not_started' },
                      { text: '–í –ø—Ä–æ—Ü–µ—Å—Å–µ', value: 'in_progress' },
                      { text: '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ —É —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è', value: 'supervisor_review' },
                      { text: '–û–¥–æ–±—Ä–µ–Ω–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º', value: 'supervisor_approved' },
                      { text: '–ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ —É –∞–¥–º–∏–Ω–∞', value: 'admin_review' },
                      { text: '–ó–∞–≤–µ—Ä—à–µ–Ω', value: 'completed' }
                    ],
                    onFilter: (value, record) => {
                      if (value === 'not_started') return !record.hasIup;
                      return record.iup?.overallStatus === value;
                    },
                    render: (_, record) => (
                      record.hasIup ? (
                        <Tag 
                          color={getStatusColor(record.iup?.overallStatus)}
                          icon={getStatusIcon(record.iup?.overallStatus)}
                          style={{ fontSize: 11 }}
                        >
                          {getStatusText(record.iup?.overallStatus)}
                        </Tag>
                      ) : (
                        <Tag color="default" style={{ fontSize: 11 }}>–ù–µ –Ω–∞—á–∞—Ç–æ</Tag>
                      )
                    )
                  },
                  {
                    title: '–ü—Ä–æ–≥—Ä–µ—Å—Å',
                    key: 'progress',
                    width: 120,
                    sorter: (a, b) => (a.progress || 0) - (b.progress || 0),
                    render: (_, record) => (
                      record.hasIup ? (
                        <Progress 
                          percent={record.progress} 
                          size="small"
                          strokeColor={{
                            '0%': '#108ee9',
                            '100%': '#87d068',
                          }}
                          format={percent => `${percent}%`}
                        />
                      ) : (
                        <Text type="secondary" style={{ fontSize: 12 }}>‚Äî</Text>
                      )
                    )
                  }, {
                    title: '–î–µ–π—Å—Ç–≤–∏—è',
                    key: 'actions',
                    width: 130,
                    fixed: 'right',
                    render: (_, record) => (
                      <Button
                        type="primary"
                        size="small"
                        icon={user.role === 'leaders' ? <EditOutlined /> : <EyeOutlined />}
                        onClick={() => record._id && handleStudentSelect(record._id)}
                        disabled={!record.hasIup || !record._id}
                        style={{ fontSize: 12 }}
                      >
                        {user.role === 'leaders' ? '–†–∞–±–æ—Ç–∞—Ç—å —Å –ò–£–ü' : '–ü—Ä–æ—Å–º–æ—Ç—Ä –ò–£–ü'}
                      </Button>
                    )
                  }
                ]}
                scroll={{ x: 1200 }}
                size="small"
                bordered
                className="iup-students-table"
              />
            </Card>
          </div>
        ) : (
          <Alert
            message="–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω"
            description="–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ."
            type="warning"
            showIcon
          />
        )}
      </Content>
    </Layout>
  );
};

export default IUP2025;
